To push a Unity project to GitHub using Visual Studio Code, follow these steps:

Step 1: Set Up Git
Install Git: Make sure Git is installed. If not, download and install it from git-scm.com.
Configure Git: Open a terminal and set up your Git username and email:
bash

git config --global user.name "Your GitHub Username"
git config --global user.email "Your Email"

Step 2: Set Up GitHub Repository
Create a Repository: Go to GitHub and create a new repository. Note the repository URL.
Initialize the Repo Locally: If your Unity project is not yet initialized with Git, you can do so in VS Code’s terminal:
bash

git init
Add the Remote Repository: Link the local project to the GitHub repo:
bash

git remote add origin https://github.com/yourusername/your-repository.git


Step 3: Configure .gitignore for Unity
Add Unity .gitignore File: To avoid committing unnecessary files, add a .gitignore file. You can use a pre-made .gitignore for Unity:
In VS Code’s terminal, you can use curl:
bash

curl -o .gitignore https://raw.githubusercontent.com/github/gitignore/main/Unity.gitignore
Alternatively, create .gitignore manually and copy-paste the Unity .gitignore template into it.



Step 4: Stage and Commit Changes
Add All Files: Stage all files for commit:
bash

git add .
Commit Files: Commit the changes with a message:
bash

git commit -m "Initial commit"






Step 5: Push to GitHub
Push Your Changes: Push the changes to the GitHub repository:
bash

git push -u origin main
Note: If your repository uses a master branch (older default), replace main with master.




Step 6: Make Future Updates
When making changes in your Unity project, repeat these commands:

bash

git add .
git commit -m "Your commit message"
git push




Step 7: Verify on GitHub
Check your repository on GitHub to make sure your Unity project has been uploaded correctly.

This will set you up to continue using Visual Studio Code with GitHub to manage your Unity project's version control.

